{
  "env": {
    "browser": true,
    "commonjs": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "standard-with-typescript",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/strict",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
        "jsx": true
      },
      "ecmaVersion": 12,
      "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "eslint-plugin-no-inline-styles", "react-hooks", "react", "simple-import-sort", "prettier"],
  "rules": {
    "no-console": "warn",
    "no-new-object": "error",
    "no-loop-func": "error",
    "default-param-last": "error",
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    "react/jsx-uses-react": 0,
    "react/react-in-jsx-scope": 0,
    "react/destructuring-assignment": "error",
    "no-inline-styles/no-inline-styles": 2,
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/method-signature-style": "error",
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-useless-empty-export": "error",
    "@typescript-eslint/no-unsafe-return": "warn",
    "@typescript-eslint/no-unsafe-argument": "warn",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/no-var-requires": 0,
    "@typescript-eslint/naming-convention": [
        "error",
        {
          "selector": "variable",
          "format": ["camelCase", "UPPER_CASE", "PascalCase"],
          "leadingUnderscore": "allow"
        },
        {
          "selector": "function",
          "format": ["camelCase", "PascalCase"]
        },
        {
          "selector": ["objectLiteralProperty", "typeProperty"],
          "format": ["camelCase"]
        },
        {
          "selector": ["enum", "enumMember", "class", "interface", "typeAlias"],
          "format": ["PascalCase"]
        },
        {
          "selector": "parameter",
          "format": ["camelCase"],
          "modifiers": ["unused"],
          "leadingUnderscore": "require"
        }
      ],
    "react/display-name": "off",
    "max-lines": ["error", 500],
    "prefer-destructuring": ["error"]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
}
}
